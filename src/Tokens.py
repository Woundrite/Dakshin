from enum import Enum

class TokenType(Enum):
    LPAREN = "LPAREN"
    RPAREN = "RPAREN"
    LBRACKET = "LBRACKET"
    RBRACKET = "RBRACKET"
    LBRACE = "LBRACE"
    RBRACE = "RBRACE"
    STRING = "STRING"
    FLOAT = "FLOAT"
    INTEGER = "INTEGER"
    BINARY = "BINARY"
    HEX = "HEX"
    IDENT = "IDENT"
    OP = "OP"
    ASSIGN = "ASSIGN"
    AND = "AND"
    OR = "OR"
    NOT = "NOT"
    EQUAL = "EQUAL"
    NEQUAL = "NEQUAL"
    LT = "LT"
    GT = "GT"
    LTE = "LTE"
    GTE = "GTE"
    INSTANCEOF = "INSTANCEOF"
    COLON = "COLON"
    SEMICOLON = "SEMICOLON"
    COMMA = "COMMA"
    NEWLINE = "NEWLINE"
    WHITESPACE = "WHITESPACE"
    COMMENT = "COMMENT"
    MULTILINE_COMMENT_START = "MULTILINE_COMMENT_START"
    MULTILINE_COMMENT_END = "MULTILINE_COMMENT_END"
    BITWISE_AND = "BITWISE_AND"
    BITWISE_OR = "BITWISE_OR"
    BITWISE_XOR = "BITWISE_XOR"
    SHIFT_LEFT = "SHIFT_LEFT"
    SHIFT_RIGHT = "SHIFT_RIGHT"
    EXPONENT = "EXPONENT"
    UNKNOWN = "UNKNOWN"
    UNTERMINATED_STRING = "UNTERMINATED_STRING"
    EOF = "EOF"
    PLUS = "PLUS"
    MINUS = "MINUS"
    MUL = "MUL"
    DIV = "DIV"
    MOD = "MOD"
    DOT = "DOT"
    ARROW = "ARROW"
    FUNCTION_ARROW = "FUNCTION_ARROW"
    REGEX = "REGEX"

class Token:
    def __init__(self, type_: TokenType, value=None):
        self.type = type_
        self.value = value

    def __repr__(self):
        return f"Token({self.type.name}, {repr(self.value)})"
// Simplified comprehensive test that avoids unimplemented features
// This version focuses on features we know are working

function main() {
    println("=== Dakshin Programming Language - Basic Feature Test ===");
    println("");
    
    // Test 1: Basic I/O Functions
    println("TEST 1: Basic I/O Functions");
    print("Hello ");
    print("World! ");
    println("This is a complete line.");
    println("");
    
    // Test 2: Variable Declarations and String Operations
    println("TEST 2: Variables and String Operations");
    let message = "Dakshin Language";
    let greeting = "Welcome to ";
    println("Message:", message);
    println("Length of message:", length(message));
    println("");
    
    // Test 3: Math Operations and Functions
    println("TEST 3: Math Operations");
    let num1 = 42;
    let num2 = 17;
    println("Number 1:", num1);
    println("Number 2:", num2);
    println("Sum:", num1 + num2);
    println("Difference:", num1 - num2);
    println("Product:", num1 * num2);
    println("Division:", num1 / num2);
    println("Absolute value of -25:", abs(-25));
    println("Minimum of 42 and 17:", min(num1, num2));
    println("Maximum of 42 and 17:", max(num1, num2));
    println("");
    
    // Test 4: System Functions
    println("TEST 4: System Functions");
    println("Current Unix timestamp:", time());
    println("");
    
    // Test 5: String Functions
    println("TEST 5: String Functions");
    let test_string = "Programming";
    println("Test string:", test_string);
    println("String length:", length(test_string));
    println("String length (using strlen):", strlen(test_string));
    println("");
    
    // Test 6: Type Conversion Functions
    println("TEST 6: Type Conversion");
    let number_str = "123";
    println("String representation:", number_str);
    println("Converted to integer:", toint(number_str));
    println("");
    
    // Test 7: Simple Conditional Statements
    println("TEST 7: Basic Conditional Logic");
    let x = 10;
    let y = 20;
    println("x =", x, ", y =", y);
    
    // Simple if statement with basic comparison
    if (x) {
        println("x is truthy (non-zero)");
    }
    println("");
    
    // Test 8: Simple Loop Construct
    println("TEST 8: While Loop");
    println("Counting from 1 to 3:");
    let counter = 1;
    while (counter <= 3) {
        println("Count:", counter);
        counter = counter + 1;
    }
    println("");
    
    // Test 9: Function Calls
    println("TEST 9: Function Calls");
    println("Testing function call:");
    let result = performCalculation(5, 3);
    println("Function result:", result);
    println("");
    
    // Test 10: Advanced Features
    println("TEST 10: Advanced Features");
    testAdvancedFeatures();
    println("");
    
    println("=== BASIC TESTS COMPLETED ===");
    println("If you see this message, basic features are working!");
    
    return 0;
}

// Helper function to test function definitions and calls
function performCalculation(a, b) {
    println("Inside performCalculation function");
    println("Parameter a:", a);
    println("Parameter b:", b);
    let sum = a + b;
    let product = a * b;
    println("Sum:", sum);
    println("Product:", product);
    return sum + product;
}

// Function to test advanced features
function testAdvancedFeatures() {
    println("Testing advanced string operations...");
    let sample = "Advanced Test";
    println("Sample string:", sample);
    println("Length:", length(sample));
    
    println("Testing mathematical operations...");
    let val1 = 100;
    let val2 = 50;
    println("Values:", val1, "and", val2);
    println("Sum:", val1 + val2);
    println("Difference:", val1 - val2);
}
